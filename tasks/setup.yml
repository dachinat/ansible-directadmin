---
- name: obtain setup.sh script
  get_url:
    url: "{{ directadmin_setup_url }}"
    dest: "{{ directadmin_setup_path }}/"

- name: ensure proper permissions on setup.sh
  file:
    path: "{{ directadmin_setup_path }}/setup.sh"
    mode: 0755

- name: ensure custombuild version is set
  template:
    src: .custombuild.j2
    dest: "{{ directadmin_setup_path }}/.custombuild"


- name: check installation
  stat: path="{{ directadmin_custombuild_path }}/../conf/directadmin.conf"
  register: directadmin_present

- name: toggle whether install DA or not
  set_fact:
    directadmin_install: False
  when: directadmin_present.stat.exists == True

# https://youtu.be/b00j4WblrzA?t=238

- debug:
    msg: "This is a good time for a coffee break - https://xkcd.com/303/"
  when: directadmin_install

- name: run setup
  command: "{{ directadmin_setup_path }}/setup.sh {{ directadmin_client_id }} {{ directadmin_license_id }} {{ directadmin_hostname }} {{ directadmin_ethernet_device }} {{ directadmin_ip_address | default( hostvars[inventory_hostname]['ansible_' + directadmin_ethernet_device]['ipv4']['address'] ) }}"
  register: setup_output
  when: directadmin_install

- debug:
    var: setup_output.stdout_lines
  when: directadmin_install

- debug:
    msg: "Directadmin is already installed and running, skipping.."
  when: not directadmin_install

- name: template out options.conf
  template:
    src: options.conf
    dest: /usr/local/directadmin/custombuild/options.conf
    backup: yes
  when: directadmin_force_update_options

- name: update custombuild
  command: "{{ item }}"
  with_items:
    - "{{ directadmin_custombuild_path }}/build update"
    - "{{ directadmin_custombuild_path }}/build all d"
    - "{{ directadmin_custombuild_path }}/build rewrite_confs"
  when: directadmin_force_update_options

- block:
    - name: modify directadmin ssl configuration
      lineinfile:
        path: "{{ directadmin_custombuild_path }}/../conf/directadmin.conf"
        regexp: '^SSL'
        line: 'SSL=1'
      when: directadmin_use_ssl

    - name: modify directadmin ca cert
      lineinfile:
        path: "{{ directadmin_custombuild_path }}/../conf/directadmin.conf"
        regexp: '^cacert'
        line: "cacert={{ directadmin_ca_cert }}"
      when: directadmin_use_ssl and directadmin_ca_cert is defined and directadmin_ca_cert is not none
    - name: modify directadmin ca key
      lineinfile:
        path: "{{ directadmin_custombuild_path }}/../conf/directadmin.conf"
        regexp: '^cakey'
        line: "cakey={{ directadmin_ca_key }}"
      when: directadmin_use_ssl and directadmin_ca_key is defined and directadmin_ca_key is not none

    - name: modify httpd vhost cert file
      lineinfile:
        path: "/etc/httpd/conf/extra/httpd-vhosts.conf"
        regexp: 'SSLCertificateFile /etc/httpd/conf/ssl.crt/server.crt'
        line: "SSLCertificateFile {{ directadmin_ca_cert }}"
      when: directadmin_use_ssl_in_httpd
    - name: "modify httpd vhost key file"
      lineinfile:
        path: "/etc/httpd/conf/extra/httpd-vhosts.conf"
        regexp: 'SSLCertificateKeyFile /etc/httpd/conf/ssl.key/server.key'
        line: "SSLCertificateKeyFile {{ directadmin_ca_key }}"
      when: directadmin_use_ssl_in_httpd
    - name: "modify httpd vhost ca file"
      lineinfile:
        path: "/etc/httpd/conf/extra/httpd-vhosts.conf"
        regexp: 'SSLCACertificateFile /etc/httpd/conf/ssl.crt/server.ca'
        line: "SSLCACertificateFile {{ directadmin_ca_cert }}"
      when: directadmin_use_ssl_in_httpd

    - name: "reload directadmin service"
      service:
        name: directadmin
        state: restarted